{"version":3,"sources":["components/Style.styled.jsx","components/Feedback/FeedbackOptions.jsx","components/Feedback/Statistics.jsx","components/Feedback/Message.jsx","components/Feedback/SectionTitle.jsx","components/Feedback/Feedback.jsx","App.jsx","index.js"],"names":["Container","styled","div","Button","StatisticContainer","StatisticItem","span","FeedbackOptions","options","onLeaveFeedback","objs","Object","keys","map","name","index","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","title","Notification","message","TitleSection","children","option","Feedback","state","countTotalFeedback","leaveFeedback","evt","target","dataset","setState","prevState","countPositiveFeedbackPercentage","percent","Math","round","positivePercent","this","totalFeedbask","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAEaA,EAAYC,IAAOC,IAAV,6DAITC,EAASF,IAAOC,IAAV,kZAiBNE,EAAqBH,IAAOC,IAAV,iMAUlBG,EAAgBJ,IAAOK,KAAV,iD,OCfXC,EAdS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAOC,OAAOC,KAAKJ,GAEzB,OACE,8BACGE,EAAKG,KAAI,SAACC,EAAMC,GAAP,OACR,cAACZ,EAAD,CAAQa,KAAK,SAASF,KAAMA,EAAkB,cAAaA,EAAMG,QAASR,EAA1E,SACGD,EAAQM,IAD4BC,SCMhCG,EAbI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAAoBC,EAAlD,EAAkDA,MAAlD,OACjB,gCACE,mCAAMA,EAAN,OACA,eAACpB,EAAD,WACE,eAACC,EAAD,qBAAuBc,EAAvB,OACA,eAACd,EAAD,wBAA0Be,EAA1B,OACA,eAACf,EAAD,oBAAsBgB,EAAtB,OACA,eAAChB,EAAD,sBAAwBiB,EAAxB,OACA,eAACjB,EAAD,kCAAoCkB,EAApC,cCLSE,EAJM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACjB,mCAAOA,EAAP,QCMWC,EAPM,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOI,EAAV,EAAUA,SAAV,OACnB,gCACE,6BAAKJ,IACJI,MCICC,EAAS,CACbV,KAAM,OACNC,QAAS,UACTC,IAAK,OAGDS,E,4MACJC,MAAQ,CACNZ,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPW,mBAAqB,WACnB,MAA+B,EAAKD,MAEpC,OAFA,EAAQZ,KAAR,EAAcE,IAAd,EAAmBD,S,EAKrBa,cAAgB,SAAAC,GAEd,IAAMpB,EAAOoB,EAAIC,OAAOC,QAAQP,OAEhC,EAAKQ,UAAS,SAAAC,GAAS,sBACpBxB,EAAOwB,EAAUxB,GAAQ,O,EAI9ByB,gCAAkC,WAChC,IAAMC,EAAUC,KAAKC,MAAO,EAAKX,MAAMZ,KAAO,EAAKa,qBAAwB,KAC3E,MAAM,GAAN,OAAUQ,EAAV,M,4CAGF,WACE,IAAMG,EAAkBC,KAAKL,kCACvBM,EAAgBD,KAAKZ,qBAE3B,OACE,eAAChC,EAAD,WACE,cAAC,EAAD,CAAcwB,MAAM,wBAApB,SACE,cAAC,EAAD,CAAiBhB,QAASqB,EAAQpB,gBAAiBmC,KAAKX,kBAGzDY,EACC,cAAC,EAAD,CACErB,MAAM,aACNL,KAAMyB,KAAKb,MAAMZ,KACjBC,QAASwB,KAAKb,MAAMX,QACpBC,IAAKuB,KAAKb,MAAMV,IAChBC,MAAOuB,EACPtB,mBAAoBoB,IAGtB,cAAC,EAAD,CAAcjB,QAAQ,6B,GA/CToB,aAsDRhB,IChEAiB,EAFH,kBAAM,cAAC,EAAD,KCElBC,IAASC,OAAQ,cACb,IAAMC,WADO,UAEb,cACA,EADA,MAIAC,SAASC,eAAe,W","file":"static/js/main.0347454e.chunk.js","sourcesContent":["import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 25px 25px 25px 50px;\r\n`;\r\n\r\nexport const Button = styled.div`\r\n  display: inline-block;\r\n  color: black;\r\n  font-weight: 700;\r\n  text-decoration: none;\r\n  padding: 5px 30px;\r\n  outline: none;\r\n  border-width: 2px 0;\r\n  border-style: solid none;\r\n  border-color: #fdbe33 #000 #d77206;\r\n  border-radius: 6px;\r\n  background: linear-gradient(#f3ae0f, #e38916) #e38916;\r\n  transition: 0.2s;\r\n  margin: 20px 5px 20px 5px;\r\n  cursor: pointer;\r\n`;\r\n\r\nexport const StatisticContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-start;\r\n  font-weight: 500;\r\n  letter-spacing: 0.06em;\r\n  font-size: 18px;\r\n  margin-top: 2px;\r\n`;\r\n\r\nexport const StatisticItem = styled.span`\r\n  margin-top: 10px;\r\n`;\r\n","import React from 'react';\r\n\r\nimport {Button} from '../Style.styled';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const objs = Object.keys(options);\r\n\r\n  return (\r\n    <div>\r\n      {objs.map((name, index) => (\r\n        <Button type=\"button\" name={name} key={index} data-option={name} onClick={onLeaveFeedback} >\r\n          {options[name]}\r\n        </Button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport {StatisticContainer, StatisticItem} from 'components/Style.styled'\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage, title }) => (\r\n  <div>\r\n    <h2> {title} </h2>\r\n    <StatisticContainer>\r\n      <StatisticItem> Good: {good} </StatisticItem>\r\n      <StatisticItem> Neutral: {neutral} </StatisticItem>\r\n      <StatisticItem> Bad: {bad} </StatisticItem>\r\n      <StatisticItem> Total: {total} </StatisticItem>\r\n      <StatisticItem> Positive feedback: {positivePercentage} </StatisticItem>\r\n    </StatisticContainer>\r\n  </div>\r\n);\r\n\r\nexport default Statistics;\r\n","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => (\r\n    <h2> { message } </h2>\r\n);\r\n\r\nexport default Notification;","import React from 'react';\r\n\r\nconst TitleSection = ({ title, children }) => (\r\n  <div>\r\n    <h1>{title}</h1>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nexport default TitleSection;\r\n","import React, { Component } from 'react';\r\n\r\nimport FeedbackOptions from 'components/Feedback/FeedbackOptions';\r\nimport Statistics from './Statistics';\r\nimport Notification from './Message';\r\nimport TitleSection from './SectionTitle';\r\n\r\nimport { Container } from 'components/Style.styled';\r\n\r\nconst option = {\r\n  good: 'Good',\r\n  neutral: 'Neutral',\r\n  bad: 'Bad',\r\n};\r\n\r\nclass Feedback extends Component {\r\n  state = {\r\n    good: 0,\r\n    neutral: 0,\r\n    bad: 0,\r\n  };\r\n\r\n  countTotalFeedback = () => {\r\n    const { good, bad, neutral } = this.state;\r\n    const total = good + bad + neutral;\r\n    return total;\r\n  };\r\n\r\n  leaveFeedback = evt => {\r\n    // console.log(evt);\r\n    const name = evt.target.dataset.option;\r\n    // console.log(name);\r\n    this.setState(prevState => ({\r\n      [name]: prevState[name] + 1,\r\n    }));\r\n  };\r\n\r\n  countPositiveFeedbackPercentage = () => {\r\n    const percent = Math.round((this.state.good / this.countTotalFeedback()) * 100);\r\n    return `${percent}%`;\r\n  };\r\n\r\n  render() {\r\n    const positivePercent = this.countPositiveFeedbackPercentage();\r\n    const totalFeedbask = this.countTotalFeedback();\r\n    \r\n    return (\r\n      <Container>\r\n        <TitleSection title=\"Please leave feedback\">\r\n          <FeedbackOptions options={option} onLeaveFeedback={this.leaveFeedback} />\r\n        </TitleSection>\r\n\r\n        {totalFeedbask ? (\r\n          <Statistics\r\n            title=\"Statistics\"\r\n            good={this.state.good}\r\n            neutral={this.state.neutral}\r\n            bad={this.state.bad}\r\n            total={totalFeedbask}\r\n            positivePercentage={positivePercent}\r\n          />\r\n        ) : (\r\n          <Notification message=\"No feedback given\" />\r\n        )}\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Feedback;\r\n","import React from 'react';\r\nimport Feedback from 'components/Feedback/Feedback';\r\n\r\nconst App = () => <Feedback />;\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render( <\n    React.StrictMode >\n    <\n    App / >\n    <\n    /React.StrictMode>,\n    document.getElementById('root'),\n);"],"sourceRoot":""}